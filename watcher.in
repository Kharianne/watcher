#!@SHELL@
set -eu

export POSIXLY_CORRECT=1

usage() {
	cat <<EOF
Usage: watcher [-hV] [TARGET [ARGS...]]

Checks watch target TARGET (optionaly with ARGS) for changes and prints diff if
any detected.

Options:
    -h  Show this help
    -V  Print version string
    -v  Verbose mode
EOF
}

version() {
	printf -- 'watcher %s\n' '@VERSION@'
}

while getopts hVv opt; do
	case "$opt" in
	h)
		usage
		exit
		;;
	V)
		version
		exit
		;;
	v)
		set -x
		;;
	*)
		usage >&2
		exit 1
		;;
	esac
done

shift $((OPTIND - 1))

if [ -z "${1:-}" ]; then
	echo >&2 'No TARGET provided.'
	usage >&2
	exit 1
fi

: "${WATCHER_LIBEXECDIR:="@libexecdir@"}"

target="$1"
shift

bin="$WATCHER_LIBEXECDIR/watcher/watcher-$target"
if [ ! -e "$bin" ]; then
	if ! bin=$(command -v "watcher-$target"); then
		printf -- 'No such target: %s\n' "$target"
		exit 1
	fi
fi

cleanup() {
	if [ -e "$out" ]; then
		rm -- "$out"
	fi
}
trap cleanup EXIT

: "${WATCHER_STORE:=~/.watcher}"
mkdir -p -- "$WATCHER_STORE"

out=$(
	echo 'mkstemp(template)' |
		m4 -D template="${TMPDIR:-/tmp}/watcherXXXXXX"
)

"$bin" "$@" >"$out"

id=$(head -n1 -- "$out")
if [ "$id" != "${id#*/*}" ]; then
	printf 'Invalid ID: %s\n' "$id"
fi
last="$WATCHER_STORE/$id"

[ -e "$last" ] || touch -- "$last"

if ! sed 1d "$out" | diff -u -- "$last" /dev/stdin >/dev/null; then
	sed 1d "$out" | diff -u -- "$last" /dev/stdin || :
	sed 1d "$out" > "$last"
fi

# vim: ft=sh :
